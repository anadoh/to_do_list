{"version":3,"sources":["components/TodoItem/TodoItem.js","components/Todo/Todo.js","App.js","reportWebVitals.js","index.js"],"names":["TodoItem","props","className","element","isCompleted","title","onClick","markClicked","id","Todo","state","elements","inputValue","index","this","findIndex","x","newElements","setState","Math","random","event","newValue","target","value","e","key","console","log","addItem","map","item","markCompleted","bind","class","type","onChange","inputHandler","onKeyUp","handleKeyPress","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAmBeA,EAjBE,SAACC,GAChB,OACE,sBACEC,UAAS,eAAUD,EAAME,QAAQC,YAAc,YAAc,IAD/D,UAIE,+BAAOH,EAAME,QAAQE,QACrB,wBACEC,QAAS,kBAAML,EAAMM,YAAYN,EAAME,QAAQK,KAC/CN,UAAS,UAAKD,EAAME,QAAQC,YAAc,iBAAmB,IAF/D,SAIGH,EAAME,QAAQC,YAAc,OAAS,YAPnCH,EAAME,QAAQK,KC0DVC,E,4MA7DbC,MAAQ,CACNC,SAAU,CACR,CAAEH,GAAI,QAASJ,aAAa,EAAMC,MAAO,WACzC,CAAEG,GAAI,QAASJ,aAAa,EAAMC,MAAO,gBACzC,CAAEG,GAAI,SAAUJ,aAAa,EAAOC,MAAO,qBAE7CO,WAAY,I,4DAGAJ,GACZ,IAAMK,EAAQC,KAAKJ,MAAMC,SAASI,WAAU,SAACC,GAAD,OAAOA,EAAER,IAAMA,KACrDS,EAAcH,KAAKJ,MAAMC,SAC/BM,EAAYJ,GAAOT,aAAeU,KAAKJ,MAAMC,SAASE,GAAOT,YAC7DU,KAAKI,SAAS,CAAEP,SAAUM,M,gCAI1B,IAIMA,EAAW,CAJJ,CACXT,GAAIW,KAAKC,SACTf,MAAOS,KAAKJ,MAAME,aAEH,mBAAaE,KAAKJ,MAAMC,WACzCG,KAAKI,SAAS,CAAEP,SAAUM,IAC1BH,KAAKI,SAAS,CAAEN,WAAY,O,mCAGjBS,GACX,IAAMC,EAAWD,EAAME,OAAOC,MAC9BV,KAAKI,SAAS,CAAEN,WAAYU,M,qCAGfG,GACC,UAAVA,EAAEC,MACJC,QAAQC,IAAId,MACZA,KAAKe,a,+BAIC,IAAD,OACDlB,EAAWG,KAAKJ,MAAMC,SAASmB,KAAI,SAACC,GACxC,OACE,cAAC,EAAD,CAAU5B,QAAS4B,EAAMxB,YAAa,EAAKyB,cAAcC,KAAK,QAIlE,OACE,sBAAKC,MAAM,OAAX,UACE,4CACA,uBACEC,KAAK,OACLX,MAAOV,KAAKJ,MAAME,WAClBwB,SAAUtB,KAAKuB,aAAaJ,KAAKnB,MACjCwB,QAASxB,KAAKyB,eAAeN,KAAKnB,QAEpC,wBAAQR,QAASQ,KAAKe,QAAQI,KAAKnB,MAAnC,iBACCH,S,GAxDU6B,IAAMC,WCKVC,MAJf,WACE,OAAO,cAAC,EAAD,KCQMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,M","file":"static/js/main.9a7800ef.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst TodoItem = (props) => {\r\n  return (\r\n    <div\r\n      className={`card ${props.element.isCompleted ? \"completed\" : \"\"}`}\r\n      key={props.element.id}\r\n    >\r\n      <span>{props.element.title}</span>\r\n      <button\r\n        onClick={() => props.markClicked(props.element.id)}\r\n        className={`${props.element.isCompleted ? \"button-clicked\" : \"\"}`}\r\n      >\r\n        {props.element.isCompleted ? \"Done\" : \"To do\"}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoItem;\r\n","import React from \"react\";\r\nimport TodoItem from \"../TodoItem/TodoItem\";\r\nclass Todo extends React.Component {\r\n  state = {\r\n    elements: [\r\n      { id: \"22222\", isCompleted: true, title: \"go shop\" },\r\n      { id: \"22223\", isCompleted: true, title: \"feed the dog\" },\r\n      { id: \"222422\", isCompleted: false, title: \"water the plants\" },\r\n    ],\r\n    inputValue: \"\",\r\n  };\r\n\r\n  markCompleted(id) {\r\n    const index = this.state.elements.findIndex((x) => x.id == id);\r\n    const newElements = this.state.elements;\r\n    newElements[index].isCompleted = !this.state.elements[index].isCompleted;\r\n    this.setState({ elements: newElements });\r\n  }\r\n\r\n  addItem() {\r\n    const item = {\r\n      id: Math.random(),\r\n      title: this.state.inputValue,\r\n    };\r\n    const newElements = [item, ...this.state.elements];\r\n    this.setState({ elements: newElements });\r\n    this.setState({ inputValue: \"\" });\r\n  }\r\n\r\n  inputHandler(event) {\r\n    const newValue = event.target.value;\r\n    this.setState({ inputValue: newValue });\r\n  }\r\n\r\n  handleKeyPress(e) {\r\n    if (e.key === \"Enter\") {\r\n      console.log(this);\r\n      this.addItem();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const elements = this.state.elements.map((item) => {\r\n      return (\r\n        <TodoItem element={item} markClicked={this.markCompleted.bind(this)} />\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div class=\"main\">\r\n        <h2>To do List</h2>\r\n        <input\r\n          type=\"text\"\r\n          value={this.state.inputValue}\r\n          onChange={this.inputHandler.bind(this)}\r\n          onKeyUp={this.handleKeyPress.bind(this)}\r\n        />\r\n        <button onClick={this.addItem.bind(this)}>Add</button>\r\n        {elements}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Todo;\r\n","import React from \"react\";\nimport Todo from \"./components/Todo/Todo\";\n\nfunction App() {\n  return <Todo />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}